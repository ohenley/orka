with "config/orka_config";

project Orka is

   for Library_Name use "orka";
   for Library_Version use Project'Library_Name & ".so." & Orka_Config.Crate_Version;

   for Create_Missing_Dirs use "True";

   Switches := ("-mavx", "-mf16c");

   Orka_Sources := ("src/orka/interface",
                    "src/orka/implementation");

   type OS_Type is ("windows", "linux");
   OS : OS_Type := Orka_Config.Alire_Host_OS;

   case OS is
      when "linux"     =>
         Orka_Sources := Orka_Sources & "src/orka/linux";
      when "windows" =>
         Orka_Sources := Orka_Sources & "src/orka/windows";
   end case;

   for Source_Dirs use Orka_Sources;

   for Object_Dir use "build/obj/" & Orka_Config.Build_Profile;
   for Library_Dir use "build/lib";

   type Library_Type_Type is ("relocatable", "static", "static-pic");
   Library_Type : Library_Type_Type :=
     external ("ORKA_LIBRARY_TYPE", external ("LIBRARY_TYPE", "static"));
   for Library_Kind use Library_Type;

   package Compiler is
      for Default_Switches ("Ada") use Orka_Config.Ada_Compiler_Switches & Switches;
      for Local_Configuration_Pragmas use "gnat.adc";
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

end Orka;
