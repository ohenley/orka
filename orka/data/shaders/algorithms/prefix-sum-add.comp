#version 420 core

#extension GL_ARB_compute_shader : require
#extension GL_ARB_shader_storage_buffer_object : require

//  SPDX-License-Identifier: Apache-2.0
//
//  Copyright (c) 2018 onox <denkpadje@gmail.com>
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

layout(local_size_x = 64) in;
// Must be a power of two

layout(std430, binding = 0) restrict buffer inputBuffer {
    uint inputs[];
};

layout(std430, binding = 1) readonly restrict buffer offsetBuffer {
    uint offsets[];
};

void main(void) {
    const uint gid = gl_GlobalInvocationID.x;

    const uint count = uint(inputs.length());
    // Must be a multiple of four

    if (4u * gid < count) {
        inputs[4u * gid + 0u] += offsets[gl_WorkGroupID.x];
        inputs[4u * gid + 1u] += offsets[gl_WorkGroupID.x];
        inputs[4u * gid + 2u] += offsets[gl_WorkGroupID.x];
        inputs[4u * gid + 3u] += offsets[gl_WorkGroupID.x];
    }
}
