--  SPDX-License-Identifier: Apache-2.0
--
--  Copyright (c) 2016 onox <denkpadje@gmail.com>
--
--  Licensed under the Apache License, Version 2.0 (the "License");
--  you may not use this file except in compliance with the License.
--  You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
--  Unless required by applicable law or agreed to in writing, software
--  distributed under the License is distributed on an "AS IS" BASIS,
--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--  See the License for the specific language governing permissions and
--  limitations under the License.

with "config";
with "dcf_ada";
with "json_ada";
with "../orka_egl/orka_egl";
with "../orka_types/orka_types";

abstract project Sources is

   OpenGL_Sources := ("../src/gl/interface",
                      "../src/gl/implementation");

   Orka_Sources := ("../src/orka/interface",
                    "../src/orka/implementation",
                    "../src/orka/interface/x86/generic",
                    "../src/orka/implementation/x86/generic");

   case Config.Windowing_System is
      when "windows" =>
         OpenGL_Sources := OpenGL_Sources & "../src/gl/windows" & "../src/orka/windows";
      when "egl"     =>
         OpenGL_Sources := OpenGL_Sources & "../src/gl/egl" & "../src/orka/linux";
         Orka_Sources   := Orka_Sources &
                             "../src/orka/interface/egl" &
                             "../src/orka/implementation/egl";
   end case;

   case Config.Compiler_Name is
      when "gnat" =>
         Orka_Sources := Orka_Sources & ("../src/orka/interface/x86/gnat");

         case Config.SIMD is
            when "AVX2" =>
               Orka_Sources := Orka_Sources &
                 ("../src/orka/interface/x86/gnat/avx2",
                  "../src/orka/interface/x86/gnat/fma");
            when others =>
               null;
         end case;
      when others =>
         null;
   end case;

   case Config.SIMD is
      when "AVX2" =>
         Orka_Sources := Orka_Sources & ("../src/orka/implementation/x86/generic/fma");
      when others =>
         null;
   end case;

   package Compiler renames Config.Compiler;
   package Binder renames Config.Binder;
   package Builder renames Config.Builder;

   package Linker is
      case Config.Windowing_System is
         when "windows" =>
            for Linker_Options use ("-lkernel32", "-lopengl32");
         when "egl" =>
            for Linker_Options use ("-lEGL");
      end case;
   end Linker;

end Sources;
